#!/bin/bash
all_project_files="ALU/alu.v Control/control.v \
                   DataMem/data_memory.v ForwardingUnit/fwdunit.v \
                   HazardDetect/hazard_detect.v ImmGen/immediate_gen.v \
                   InstrMem/instruction_memory.v RegisterBank/register_bank.v \
                   rv16r.v sim.v"
all_v_files=$(find ~/git/RISCV16 -name "*.v")
for f in $all_project_files;
do
    if ! echo $all_v_files |  grep -q "$f";
    then
        echo "Missing $f from project."
        exit 1
    fi
done

PROGRAM_ARG_INTERFACE="-GUI -h -top"

print_usage () {
    echo "RISCV16 simulation scrtip."
    echo "  Usage:"
    for arg in $PROGRAM_ARG_INTERFACE;
    do
        case $arg in
            "-GUI") echo "    -GUI: Execute with graphic interface.";;
            "-h"  ) echo "    -h:   Show this usage.";;
            "-top") echo "    -top <top-module>: Simulation's top module";;
        esac
    done
}

SKIP=0

for arg in $@;
do
    if [ $SKIP -ne 1 ];
    then
        # Processing switches
        case $arg in
            "-GUI") echo "Executing GUI mode."; GUI=1;;
            "-top") TOP_MODULE=$(echo "$@" | grep -o -P "\-top\s+[^\s]+" | sed "s@\-top *@@"); SKIP=1;;
            "-h"  ) print_usage; exit 0;;
            *     ) echo "Unkown switch $arg"; print_usage; exit 1;;
        esac
    else
        SKIP=0
    fi
done
if [ -z $TOP_MODULE ];
then
    TOP_MODULE="sim"
fi
if ! grep -q -r -P "module\s+$TOP_MODULE" $all_v_files;
then
    echo "ERROR: Could not find top module \"$TOP_MODULE\""
    exit 1
fi

IVLOG_VER=$(iverilog -V | sed -n '1p' | sed -r 's@^.*version ([0-9\.\-]+) .*$@\1@')
if ! [ -z $(echo "$IVLOG_VER <= 10.1" | bc -l) ];
then
    iverilog $all_v_files -Wall -s "$TOP_MODULE" 2>&1 | grep -v ".*Port declaration of.*"
else
    iverilog $all_v_files -Wall -s "$TOP_MODULE"
fi

vvp a.out
if ! [ -z $GUI ];
then
    gtkwave my_dumpfile.vcd
fi
